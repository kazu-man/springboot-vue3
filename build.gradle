//追加
buildscript {
	ext {
		dockerComposePluginVersion = "0.15.0"
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath "com.avast.gradle:gradle-docker-compose-plugin:${dockerComposePluginVersion}"
	}
}
plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
}

group = 'com.group'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

bootJar{
    archiveFileName = 'app.jar'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	implementation 'com.auth0:java-jwt:3.19.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

//追加
apply plugin: "docker-compose"
//追加
dockerCompose {
	useComposeFiles = ["docker/docker-compose.yml"]
}

task devComposeUp(group: 'docker', description: 'create container for development',type:Exec) {
	workingDir './docker'
	commandLine("docker-compose", "-f","docker-compose.local.yaml","up")
}

task runNpmServe(group: 'application', description: 'create container for development',type:Exec) {
	workingDir './vuejs'
	commandLine("npm", "run","serve")
}

